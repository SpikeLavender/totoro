<?xml version="1.0" encoding="UTF-8" ?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="accountDao" class="com.hetengjiao.dao.impl.JdbcAccountDaoImpl" init-method="init" destroy-method="destroy">
        <!--set注入使用property标签，如果注入的是另外一个bean，使用ref属性，如果注入的是普通值，使用value属性-->
        <property name="connectionUtils" ref="connectionUtils"/>
        <property name="name" value="zhangsan"/>
        <property name="money" value="10.8"/>
        <property name="sex" value="1"/>

        <!--set注入复杂数据类型-->

        <property name="myArray">
            <array>
                <value>array1</value>
                <value>array2</value>
                <value>array3</value>
            </array>
        </property>

        <property name="myMap">
            <map>
                <entry key="key1" value="value1"/>
                <entry key="key2" value="value2"/>
            </map>
        </property>

        <property name="mySet">
            <set>
                <value>set1</value>
                <value>set2</value>
            </set>
        </property>

        <property name="myProperties">
            <props>
                <prop key="prop1">value1</prop>
                <prop key="prop2">value2</prop>
            </props>
        </property>

<!--        <constructor-arg index="0" ref="connectionUtils" />-->
<!--        <constructor-arg index="1" value="zhangsan" />-->
<!--        <constructor-arg index="2" value="1" />-->
<!--        <constructor-arg index="3" value="100.9" />-->

<!--        <constructor-arg name="connectionUtils" ref="connectionUtils" />-->
<!--        <constructor-arg name="name" value="zhangsan" />-->
<!--        <constructor-arg name="sex" value="1" />-->
<!--        <constructor-arg name="money" value="100.8" />-->

    </bean>

    <bean id="transferService" class="com.hetengjiao.service.impl.TransferServiceImpl" scope="singleton">
        <property name="AccountDao" ref="accountDao"/>
    </bean>


    <bean id="transactionManager" class="com.hetengjiao.utils.TransactionManager">
        <property name="ConnectionUtils" ref="connectionUtils"/>
    </bean>

    <bean id="proxyFactory" class="com.hetengjiao.factory.ProxyFactory">
        <property name="TransactionManager" ref="transactionManager"/>
    </bean>

    <!--Spring IoC实例化Bean的三种方式-->
    <!--方式一：使用无参构造器（推荐）-->
    <bean id="connectionUtils" class="com.hetengjiao.utils.ConnectionUtils"/>


    <!--另外两种是为了我们自己new的对象加入到SpringIoC容器管理-->
    <!--方式二：静态方法-->
    <bean id="connectionUtilsStatic" class="com.hetengjiao.factory.CreateBeanFactory" factory-method="getInstanceStatic"/>

    <!--方式二：实例化方法-->
    <bean id="createBeanFactory" class="com.hetengjiao.factory.CreateBeanFactory"/>
    <bean id="connectionUtilsInstance" factory-bean="createBeanFactory" factory-method="getInstance"/>
</beans>